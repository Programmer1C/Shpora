
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	СуммаПоДокументу = СписокНоменклатуры.Итог("Сумма");
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Метод = РегистрыСведений.УчетнаяПолитика.ПолучитьПоследнее(МоментВремени()).МетодСписания;
	Если Метод = Перечисления.УчетнаяПолитика.ЛИФО Тогда
		ПорядокСортировки = " УБЫВ";
	Иначе
		ПорядокСортировки = "";
	КонецЕсли; 
	
	// регистр ОстаткиНоменклатуры Расход   Новая методика
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура КАК Номенклатура,
		|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Количество) КАК Количество
		|ПОМЕСТИТЬ ТабДок
		|ИЗ
		|	Документ.РасходнаяНакладная.СписокНоменклатуры КАК РасходнаяНакладнаяСписокНоменклатуры
		|ГДЕ
		|	РасходнаяНакладнаяСписокНоменклатуры.Ссылка = &Ссылка
		|	И РасходнаяНакладнаяСписокНоменклатуры.Номенклатура.ВидНоменклатуры <> &Услуга
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабДок.Номенклатура,
		|	ТабДок.Количество
		|ИЗ
		|	ТабДок КАК ТабДок";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Услуга", Перечисления.ВидыНоменклатуры.Услуга);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ОстаткиНоменклатуры.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Номенклатура = Выборка.Номенклатура;
		Движение.Склад = Склад;
		Движение.Количество = Выборка.Количество;
	КонецЦикла;
	
	Движения.ОстаткиНоменклатуры.Записывать = Истина;
	Движения.ОстаткиНоменклатуры.БлокироватьДляИзменения = Истина;
	Движения.ОстаткиНоменклатуры.Записать();
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиНоменклатурыОстатки.Номенклатура.Представление,
		|	ОстаткиНоменклатурыОстатки.КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
		|			&Граница,
		|			Склад = &Склад
		|				И Номенклатура В
		|					(ВЫБРАТЬ
		|						ТабДок.Номенклатура
		|					ИЗ
		|						ТабДок КАК ТабДок)) КАК ОстаткиНоменклатурыОстатки
		|ГДЕ
		|	ОстаткиНоменклатурыОстатки.КоличествоОстаток < 0";
	
	Запрос.УстановитьПараметр("Граница", Новый Граница(МоментВремени(),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Склад", Склад);
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Отказ = Истина;
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "В документе № " + Номер + " не хватает " + (-Выборка.КоличествоОстаток) + Выборка.НоменклатураПредставление;
			Сообщение.Сообщить(); 
			
		КонецЦикла;
		Возврат;
	КонецЕсли; 

	// регистр Себестоимость Расход
	Движения.Себестоимость.Записывать = Истина;
//	Движения.Себестоимость.БлокироватьДляИзменения = Истина;
	Движения.Себестоимость.Записать();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.Себестоимость");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = СписокНоменклатуры;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	Блокировка.Заблокировать();

	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТабДок.Номенклатура КАК Номенклатура,
		|	ТабДок.Количество КАК Количество,
		|	СебестоимостьОстатки.Партия,
		|	ЕСТЬNULL(СебестоимостьОстатки.КоличествоОстаток, 0) КАК КоличестоОст,
		|	ЕСТЬNULL(СебестоимостьОстатки.СуммаОстаток, 0) КАК СуммаОст
		|ИЗ
		|	ТабДок КАК ТабДок
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Себестоимость.Остатки(
		|				&МоментВремени,
		|				Номенклатура В
		|					(ВЫБРАТЬ
		|						ТабДок.Номенклатура
		|					ИЗ
		|						ТабДок КАК ТабДок)) КАК СебестоимостьОстатки
		|		ПО ТабДок.Номенклатура = СебестоимостьОстатки.Номенклатура
		|
		|УПОРЯДОЧИТЬ ПО
		|	СебестоимостьОстатки.Партия.МоментВремени" + ПорядокСортировки +"
		|ИТОГИ
		|	МАКСИМУМ(Количество)
		|ПО
		|	Номенклатура";
	
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени()); 
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаНоменклатура.Следующий() Цикл
		ОсталосьСписать = ВыборкаНоменклатура.Количество;
		ВыборкаПартия = ВыборкаНоменклатура.Выбрать(); 
		
		Пока ВыборкаПартия.Следующий() И ОсталосьСписать>0 Цикл
			Списать = МИН(ОсталосьСписать, ВыборкаПартия.КоличестоОст); 
			Движение = Движения.Себестоимость.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Номенклатура = ВыборкаПартия.Номенклатура;
			Движение.Партия = ВыборкаПартия.Партия;
			Движение.Количество = Списать;
			Если Списать = ВыборкаПартия.КоличестоОст Тогда
				Движение.Сумма = ВыборкаПартия.СуммаОст;
			Иначе
				Движение.Сумма = Списать * ВыборкаПартия.СуммаОст / ВыборкаПартия.КоличестоОст;
			КонецЕсли; 
			ОсталосьСписать = ОсталосьСписать - Списать;
		КонецЦикла;
	КонецЦикла;

	// регистр Управленческий 
	Движения.Управленческий.Записывать = Истина;
	Движения.Управленческий.Записать();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрБухгалтерии.Управленческий");
	ЭлементБлокировки.УстановитьЗначение("Счет", ПланыСчетов.Управленческий.Товары);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = СписокНоменклатуры;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных(ПланыВидовХарактеристик.ВидыСубконто.Номенклатура, "Номенклатура");
	Блокировка.Заблокировать();

	Субконто1 = Новый Массив;
	Субконто1.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Номенклатура);
	
	Субконто2 = Новый Массив;
	Субконто2.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Номенклатура);
	Субконто2.Добавить(ПланыВидовХарактеристик.ВидыСубконто.СрокГодности);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура КАК Номенклатура,
		|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Количество) КАК Количество
		|ПОМЕСТИТЬ ТабДок
		|ИЗ
		|	Документ.РасходнаяНакладная.СписокНоменклатуры КАК РасходнаяНакладнаяСписокНоменклатуры
		|ГДЕ
		|	РасходнаяНакладнаяСписокНоменклатуры.Ссылка = &Ссылка
		|	И РасходнаяНакладнаяСписокНоменклатуры.Номенклатура.ВидНоменклатуры <> &Услуга
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабДок.Номенклатура КАК Номенклатура,
		|	ТабДок.Количество КАК Количество,
		|	ЕСТЬNULL(БезСрока.КоличествоОстаток, 0) КАК КоличествоОбщее,
		|	ЕСТЬNULL(БезСрока.СуммаОстаток, 0) КАК СуммаОбщее,
		|	СоСроком.Субконто2 КАК СрокГодности,
		|	ЕСТЬNULL(СоСроком.КоличествоОстаток, 0) КАК КоличествоПоСрокам,
		|	ТабДок.Номенклатура.Представление
		|ИЗ
		|	ТабДок КАК ТабДок
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Управленческий.Остатки(
		|				&МоментВремени,
		|				Счет = &Товары,
		|				&Субконто1,
		|				Субконто1 В
		|					(ВЫБРАТЬ
		|						ТабДок.Номенклатура
		|					ИЗ
		|						ТабДок КАК ТабДок)) КАК БезСрока
		|		ПО ТабДок.Номенклатура = БезСрока.Субконто1
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Управленческий.Остатки(
		|				&МоментВремени,
		|				Счет = &Товары,
		|				&Субконто2,
		|				Субконто1 В
		|					(ВЫБРАТЬ
		|						ТабДок.Номенклатура
		|					ИЗ
		|						ТабДок КАК ТабДок)) КАК СоСроком
		|		ПО ТабДок.Номенклатура = СоСроком.Субконто1
		|
		|УПОРЯДОЧИТЬ ПО
		|	СрокГодности
		|ИТОГИ
		|	МАКСИМУМ(Количество),
		|	СУММА(КоличествоПоСрокам)
		|ПО
		|	Номенклатура";
	
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Субконто1", Субконто1);
	Запрос.УстановитьПараметр("Субконто2", Субконто2);
	Запрос.УстановитьПараметр("Товары", ПланыСчетов.Управленческий.Товары);
	Запрос.УстановитьПараметр("Услуга", Перечисления.ВидыНоменклатуры.Услуга);
	
	РезультатЗапроса = Запрос.Выполнить(); 	
	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		Нехватка = ВыборкаНоменклатура.Количество - ВыборкаНоменклатура.КоличествоПоСрокам;
		Если Нехватка >0 Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "В документе № " + Номер + " не хватает " + ВыборкаНоменклатура.НоменклатураПредставление + " в количестве " + Нехватка ;
			Сообщение.Сообщить(); 
			Отказ = Истина;
		КонецЕсли; 
		
		Если НЕ Отказ Тогда
			ОсталосьСписать = ВыборкаНоменклатура.Количество;
			Выборка = ВыборкаНоменклатура.Выбрать();
			
			Пока Выборка.Следующий() И ОсталосьСписать>0 Цикл
				
				Списать = МИН(ОсталосьСписать, Выборка.КоличествоПоСрокам); 
				Движение = Движения.Управленческий.Добавить();
				Движение.СчетДт = ПланыСчетов.Управленческий.ПрибылиУбытки;
				Движение.СчетКт = ПланыСчетов.Управленческий.Товары;
				Движение.Период = Дата;
				Движение.КоличествоКт = Списать;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = Выборка.Номенклатура;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.СрокГодности] = Выборка.СрокГодности;
				Если Списать = Выборка.КоличествоОбщее Тогда
					Движение.Сумма = Выборка.СуммаОбщее;
				Иначе
					Движение.Сумма = Списать * Выборка.СуммаОбщее / Выборка.КоличествоОбщее;
				КонецЕсли; 
				ОсталосьСписать = ОсталосьСписать - Списать;
			КонецЦикла;
		КонецЕсли; 
	КонецЦикла;
	Если НЕ Отказ Тогда
		Движение = Движения.Управленческий.Добавить();
		Движение.Период = Дата;
		Движение.СчетДт = ПланыСчетов.Управленческий.Покупатели;
		Движение.СчетКт = ПланыСчетов.Управленческий.ПрибылиУбытки;
		Движение.Сумма = СуммаПоДокументу;
	КонецЕсли; 

	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!


	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры
